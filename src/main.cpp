#include "applesauce/App.h"
#include "applesauce/VertexBuffer.h"
#include "applesauce/VertexArray.h"
#include "applesauce/Shader.h"
#include "applesauce/Camera.h"

#define GLM_SWIZZLE
#include <glm/gtc/matrix_transform.hpp>
#include <glm/gtx/euler_angles.hpp>
#include <glm/gtx/rotate_vector.hpp>
#include <glm/gtx/string_cast.hpp>
#include <glm/mat4x4.hpp>
#include <glm/vec3.hpp>
#include <glm/vec4.hpp>

#include <algorithm>
#include <cstdlib>
#include <ctime>
#include <filesystem>
#include <fstream>
#include <memory>
#include <ostream>
#include <sstream>
#include <vector>

struct Vertex
{
    glm::vec3 position;
    glm::vec3 normal;
};

static constexpr glm::vec3 FLOOR_COLOR = glm::vec3{1.0, 0.6, 0.1};
static constexpr glm::vec3 WALL_COLOR = glm::vec3{0.6, 0.6, 1.0};

static constexpr glm::vec3 TANK_COLORS[] = {
    glm::vec3{0, 0, 1}, // blue
    glm::vec3{1, 0, 0}, // red
    glm::vec3{1, 1, 1}, // white
    glm::vec3{1, 1, 0}, // yellow
    glm::vec3{0, 0, 0}, // black
};

std::string readFileText(const char *filename)
{
    std::ifstream f{filename};
    return std::string(std::istreambuf_iterator<char>(f), std::istreambuf_iterator<char>());
}

std::shared_ptr<Shader> loadShader(const char *name)
{
    static const std::string vertexShaderExt = ".vs.glsl";
    static const std::string fragmentShaderExt = ".fs.glsl";

    std::filesystem::path assetsPath = "assets/shaders";
    std::filesystem::path vertexShaderPath = assetsPath / (std::string(name) + vertexShaderExt);
    std::filesystem::path fragmentShaderPath = assetsPath / (std::string(name) + fragmentShaderExt);

    std::cout << "Loading shader " << name << " from:\n";
    std::cout << "\t" << vertexShaderPath << "\n";
    std::cout << "\t" << fragmentShaderPath << std::endl;

    const auto vertex_shader_text = readFileText(vertexShaderPath.c_str());
    const auto fragment_shader_text = readFileText(fragmentShaderPath.c_str());

    auto shader = std::make_shared<Shader>();
    shader->add_vertex_stage(vertex_shader_text);
    shader->add_fragment_stage(fragment_shader_text);

    if (!shader->compile_and_link())
    {
        std::cerr << shader->error_log() << std::endl;
        return nullptr;
    }

    return shader;
}

std::ostream &operator<<(std::ostream &os, const Window::MouseHandler::Button &b)
{
    switch (b)
    {
    case Window::MouseHandler::Button::left:
        os << "left";
        break;
    case Window::MouseHandler::Button::right:
        os << "right";
        break;
    case Window::MouseHandler::Button::middle:
        os << "middle";
        break;
    default:
        os << "unknown mouse button";
        break;
    }
    return os;
}

class Triangles : public App, public Window::ScrollHandler, public Window::MouseHandler, public Window::KeyHandler
{
public:
    struct Entity
    {
        glm::vec3 position;
        float angle;
        size_t meshIndex;
        glm::vec3 color;
    };

    class Tank
    {
        enum class Steer
        {
            neutral,
            left,
            right
        };

    public:
        Tank(Entity *entity) : entity(entity) {}

        void steerLeft()
        {
            steering = Steer::left;
        }
        void steerRight()
        {
            steering = Steer::right;
        }
        void releaseSteering()
        {
            steering = Steer::neutral;
        }

        void advance()
        {
            advancing = true;
        }

        void halt()
        {
            advancing = false;
        }

        void update()
        {
            static float steerRate = 0.05;
            static float speed = 0.1;
            switch (steering)
            {
            case Steer::left:
                entity->angle += steerRate;
                break;
            case Steer::right:
                entity->angle -= steerRate;
                break;
            case Steer::neutral:
                break;
            }

            if (advancing)
            {
                glm::vec3 direction = glm::rotateY(glm::vec3{0.0, 0.0, -1.0}, entity->angle);
                entity->position += direction * speed;
            }
        }

    private:
        Entity *entity;
        Steer steering = Steer::neutral;
        bool advancing = false;
    };

public:
    void onKeyDown(int key) override
    {
        std::cout << "KEY DOWN: " << key << std::endl;
        if (player == nullptr)
            return;
        if (key == GLFW_KEY_A)
        {
            player->steerLeft();
        }
        else if (key == GLFW_KEY_D)
        {
            player->steerRight();
        }
        else if (key == GLFW_KEY_W)
        {
            player->advance();
        }
    }

    void onKeyUp(int key) override
    {
        if (player == nullptr)
            return;
        if (key == GLFW_KEY_A || key == GLFW_KEY_D)
        {
            player->releaseSteering();
        }
        else if (key == GLFW_KEY_W)
        {
            player->halt();
        }
    }

    void onScroll(double, double yoffset) override
    {
        dist -= yoffset;
        dist = std::max(dist, 0.1f);
    }

    void onMouseDown(MouseHandler::Button button) override
    {
        if (button == MouseHandler::Button::middle)
        {
            move_camera = true;
        }
    }

    void onMouseUp(MouseHandler::Button button) override
    {
        if (button == MouseHandler::Button::middle)
        {
            move_camera = false;
        }
    }

    void onMouseMove(double xpos, double ypos) override
    {
        if (move_camera)
        {
            theta -= (last_xpos - xpos) * 0.1;
            pitch -= (last_ypos - ypos) * 0.1;
        }
        last_xpos = xpos;
        last_ypos = ypos;
    }

    void init() override
    {
        srand(std::time(0));

        window.setScrollHandler(this);
        window.setMouseHandler(this);
        window.setKeyHandler(this);

        // Loads from assets/shaders/basic.fs.glsl and assets/shaders/basic.vs.glsl
        shader = loadShader("basic");
        shader->use();

        // TODO: Move vertex data into files
        cubeBuffer = std::make_shared<applesauce::VertexBuffer<Vertex>>(std::initializer_list<Vertex>{
            {{0.5, 1.0, -0.5}, {0.0, 1.0, 0.0}},
            {{-0.5, 1.0, 0.5}, {0.0, 1.0, 0.0}},
            {{0.5, 1.0, 0.5}, {0.0, 1.0, 0.0}},
            {{0.5, 0.0, 0.5}, {0.0, 0.0, 1.0}},
            {{-0.5, 1.0, 0.5}, {0.0, 0.0, 1.0}},
            {{-0.5, 0.0, 0.5}, {0.0, 0.0, 1.0}},
            {{-0.5, 0.0, 0.5}, {-1.0, 0.0, 0.0}},
            {{-0.5, 1.0, -0.5}, {-1.0, 0.0, 0.0}},
            {{-0.5, 0.0, -0.5}, {-1.0, 0.0, 0.0}},
            {{-0.5, 0.0, -0.5}, {0.0, -1.0, -0.0}},
            {{0.5, 0.0, 0.5}, {0.0, -1.0, -0.0}},
            {{-0.5, 0.0, 0.5}, {0.0, -1.0, -0.0}},
            {{0.5, 0.0, -0.5}, {1.0, 0.0, 0.0}},
            {{0.5, 1.0, 0.5}, {1.0, 0.0, 0.0}},
            {{0.5, 0.0, 0.5}, {1.0, 0.0, 0.0}},
            {{-0.5, 0.0, -0.5}, {0.0, -0.0, -1.0}},
            {{0.5, 1.0, -0.5}, {0.0, -0.0, -1.0}},
            {{0.5, 0.0, -0.5}, {0.0, -0.0, -1.0}},
            {{0.5, 1.0, -0.5}, {0.0, 1.0, -0.0}},
            {{-0.5, 1.0, -0.5}, {0.0, 1.0, -0.0}},
            {{-0.5, 1.0, 0.5}, {0.0, 1.0, -0.0}},
            {{0.5, 0.0, 0.5}, {0.0, 0.0, 1.0}},
            {{0.5, 1.0, 0.5}, {0.0, 0.0, 1.0}},
            {{-0.5, 1.0, 0.5}, {0.0, 0.0, 1.0}},
            {{-0.5, 0.0, 0.5}, {-1.0, -0.0, 0.0}},
            {{-0.5, 1.0, 0.5}, {-1.0, -0.0, 0.0}},
            {{-0.5, 1.0, -0.5}, {-1.0, -0.0, 0.0}},
            {{-0.5, 0.0, -0.5}, {0.0, -1.0, -0.0}},
            {{0.5, 0.0, -0.5}, {0.0, -1.0, -0.0}},
            {{0.5, 0.0, 0.5}, {0.0, -1.0, -0.0}},
            {{0.5, 0.0, -0.5}, {1.0, 0.0, 0.0}},
            {{0.5, 1.0, -0.5}, {1.0, 0.0, 0.0}},
            {{0.5, 1.0, 0.5}, {1.0, 0.0, 0.0}},
            {{-0.5, 0.0, -0.5}, {0.0, 0.0, -1.0}},
            {{-0.5, 1.0, -0.5}, {0.0, 0.0, -1.0}},
            {{0.5, 1.0, -0.5}, {0.0, 0.0, -1.0}},
        });

        planeBuffer = std::make_shared<applesauce::VertexBuffer<Vertex>>(std::initializer_list<Vertex>{
            {{-0.5, 0.0, 0.5}, {-0.0, 1.0, -0.0}},
            {{0.5, 0.0, -0.5}, {-0.0, 1.0, -0.0}},
            {{-0.5, 0.0, -0.5}, {-0.0, 1.0, -0.0}},
            {{-0.5, 0.0, 0.5}, {0.0, 1.0, -0.0}},
            {{0.5, 0.0, 0.5}, {0.0, 1.0, -0.0}},
            {{0.5, 0.0, -0.5}, {0.0, 1.0, -0.0}},
        });

        tenkBuffer = std::make_shared<applesauce::VertexBuffer<Vertex>>(std::initializer_list<Vertex>{
            {{-0.3333333134651184, 0.49101847410202026, 0.3333333134651184}, {0.0, 0.9999999403953552, 0.0}},
            {{-1.0, 0.49101847410202026, 1.0}, {0.0, 0.9999999403953552, 0.0}},
            {{-0.3333333134651184, 0.49101847410202026, 1.0}, {0.0, 0.9999999403953552, 0.0}},
            {{-0.3333333134651184, 0.0, 0.7625488042831421}, {0.0, -0.4353553354740143, 0.9002587199211121}},
            {{-1.0, 0.49101847410202026, 1.0}, {0.0, -0.4353553354740143, 0.9002587199211121}},
            {{-1.0, 0.0, 0.7625488042831421}, {0.0, -0.4353553354740143, 0.9002587199211121}},
            {{-1.0, 0.0, -0.2320207953453064}, {-1.0, 0.0, 0.0}},
            {{-1.0, 0.49101847410202026, -1.0}, {-1.0, 0.0, 0.0}},
            {{-1.0, 0.0, -0.729305624961853}, {-1.0, 0.0, 0.0}},
            {{0.3333333134651184, 0.0, 0.26526400446891785}, {0.0, -1.0, -0.0}},
            {{1.0, 0.0, 0.7625488042831421}, {0.0, -1.0, -0.0}},
            {{0.3333333134651184, 0.0, 0.7625488042831421}, {0.0, -1.0, -0.0}},
            {{1.0, 0.0, 0.26526397466659546}, {1.0, -0.0, 0.0}},
            {{1.0, 0.49101847410202026, 1.0}, {1.0, -0.0, 0.0}},
            {{1.0, 0.0, 0.7625488042831421}, {1.0, -0.0, 0.0}},
            {{0.3333333134651184, 0.0, -0.729305624961853}, {0.0, -0.48278695344924927, -0.8757378458976746}},
            {{1.0, 0.49101847410202026, -1.0}, {0.0, -0.48278695344924927, -0.8757378458976746}},
            {{1.0, 0.0, -0.729305624961853}, {0.0, -0.48278695344924927, -0.8757378458976746}},
            {{-1.0, 0.0, -0.729305624961853}, {0.0, -0.48278695344924927, -0.8757378458976746}},
            {{-0.3333333134651184, 0.49101847410202026, -1.0}, {0.0, -0.48278695344924927, -0.8757378458976746}},
            {{-0.3333333134651184, 0.0, -0.729305624961853}, {0.0, -0.48278695344924927, -0.8757378458976746}},
            {{0.3333333134651184, 0.0, -0.2320207953453064}, {-1.0, 0.0, 0.0}},
            {{0.3333333134651184, 0.49101847410202026, -1.0}, {-1.0, 0.0, 0.0}},
            {{0.3333333134651184, 0.0, -0.729305624961853}, {-1.0, 0.0, 0.0}},
            {{-1.0, 0.0, 0.26526400446891785}, {0.0, -1.0, -0.0}},
            {{-0.3333333134651184, 0.0, 0.7625488042831421}, {0.0, -1.0, -0.0}},
            {{-1.0, 0.0, 0.7625488042831421}, {0.0, -1.0, -0.0}},
            {{-0.3333333134651184, 0.0, -0.2320207953453064}, {1.0, 0.0, 0.0}},
            {{-0.3333333134651184, 0.49101847410202026, -1.0}, {1.0, 0.0, 0.0}},
            {{-0.3333333134651184, 0.49101847410202026, -0.3333333134651184}, {1.0, 0.0, 0.0}},
            {{1.0, 0.0, 0.7625488042831421}, {0.0, -0.4353553354740143, 0.9002587199211121}},
            {{0.3333333134651184, 0.49101847410202026, 1.0}, {0.0, -0.4353553354740143, 0.9002587199211121}},
            {{0.3333333134651184, 0.0, 0.7625488042831421}, {0.0, -0.4353553354740143, 0.9002587199211121}},
            {{0.3333333134651184, 0.0, -0.2320207953453064}, {0.0, -0.2020747810602188, -0.9793701171875}},
            {{-0.3333333134651184, 0.49101847410202026, -0.3333333134651184}, {0.0, -0.2020747810602188, -0.9793701171875}},
            {{0.3333333134651184, 0.49101847410202026, -0.3333333134651184}, {0.0, -0.2020747810602188, -0.9793701171875}},
            {{1.0, 0.49101847410202026, 0.3333333134651184}, {0.0, 0.9999999403953552, 0.0}},
            {{0.3333333134651184, 0.49101847410202026, 1.0}, {0.0, 0.9999999403953552, 0.0}},
            {{1.0, 0.49101847410202026, 1.0}, {0.0, 0.9999999403953552, 0.0}},
            {{-0.3333333134651184, 0.0, 0.26526400446891785}, {1.0, -0.0, 0.0}},
            {{-0.3333333134651184, 0.49101847410202026, 1.0}, {1.0, -0.0, 0.0}},
            {{-0.3333333134651184, 0.0, 0.7625488042831421}, {1.0, -0.0, 0.0}},
            {{-0.3333333134651184, 0.49101847410202026, 0.3333333134651184}, {0.0, -0.13731563091278076, 0.990527331829071}},
            {{0.3333333134651184, 0.0, 0.26526400446891785}, {0.0, -0.13731563091278076, 0.990527331829071}},
            {{0.3333333134651184, 0.49101847410202026, 0.3333333134651184}, {0.0, -0.13731563091278076, 0.990527331829071}},
            {{0.3333333134651184, 0.49101847410202026, -0.3333333134651184}, {0.0, 1.0, 0.0}},
            {{-0.3333333134651184, 0.49101847410202026, 0.3333333134651184}, {0.0, 1.0, 0.0}},
            {{0.3333333134651184, 0.49101847410202026, 0.3333333134651184}, {0.0, 1.0, 0.0}},
            {{1.0, 0.49101847410202026, -1.0}, {0.0, 0.9999999403953552, 0.0}},
            {{0.3333333134651184, 0.49101847410202026, -0.3333333134651184}, {0.0, 0.9999999403953552, 0.0}},
            {{1.0, 0.49101847410202026, -0.3333333134651184}, {0.0, 0.9999999403953552, 0.0}},
            {{1.0, 0.49101847410202026, -0.3333333134651184}, {0.0, 1.0, 0.0}},
            {{0.3333333134651184, 0.49101847410202026, 0.3333333134651184}, {0.0, 1.0, 0.0}},
            {{1.0, 0.49101847410202026, 0.3333333134651184}, {0.0, 1.0, 0.0}},
            {{0.3333333134651184, 0.0, 0.26526400446891785}, {-1.0, -0.0, 0.0}},
            {{0.3333333134651184, 0.49101847410202026, 1.0}, {-1.0, -0.0, 0.0}},
            {{0.3333333134651184, 0.49101847410202026, 0.3333333134651184}, {-1.0, -0.0, 0.0}},
            {{-0.3333333134651184, 0.0, -0.2320207953453064}, {0.0, -1.0, -0.0}},
            {{0.3333333134651184, 0.0, 0.26526400446891785}, {0.0, -1.0, -0.0}},
            {{-0.3333333134651184, 0.0, 0.26526400446891785}, {0.0, -1.0, -0.0}},
            {{-1.0, 0.0, -0.729305624961853}, {0.0, -1.0, -0.0}},
            {{-0.3333333134651184, 0.0, -0.2320207953453064}, {0.0, -1.0, -0.0}},
            {{-1.0, 0.0, -0.2320207953453064}, {0.0, -1.0, -0.0}},
            {{-1.0, 0.0, -0.2320207953453064}, {0.0, -1.0, -0.0}},
            {{-0.3333333134651184, 0.0, 0.26526400446891785}, {0.0, -1.0, -0.0}},
            {{-1.0, 0.0, 0.26526400446891785}, {0.0, -1.0, -0.0}},
            {{1.0, 0.0, -0.729305624961853}, {1.0, 0.0, 0.0}},
            {{1.0, 0.49101847410202026, -0.3333333134651184}, {1.0, 0.0, 0.0}},
            {{1.0, 0.0, -0.23202082514762878}, {1.0, 0.0, 0.0}},
            {{1.0, 0.0, -0.23202082514762878}, {1.0, -0.0, 0.0}},
            {{1.0, 0.49101847410202026, 0.3333333134651184}, {1.0, -0.0, 0.0}},
            {{1.0, 0.0, 0.26526397466659546}, {1.0, -0.0, 0.0}},
            {{0.3333333134651184, 0.0, -0.729305624961853}, {0.0, -1.0, -0.0}},
            {{1.0, 0.0, -0.23202082514762878}, {0.0, -1.0, -0.0}},
            {{0.3333333134651184, 0.0, -0.2320207953453064}, {0.0, -1.0, -0.0}},
            {{0.3333333134651184, 0.0, -0.2320207953453064}, {0.0, -1.0, -0.0}},
            {{1.0, 0.0, 0.26526397466659546}, {0.0, -1.0, -0.0}},
            {{0.3333333134651184, 0.0, 0.26526400446891785}, {0.0, -1.0, -0.0}},
            {{-1.0, 0.0, 0.7625488042831421}, {-1.0, 0.0, 0.0}},
            {{-1.0, 0.49101847410202026, 0.3333333134651184}, {-1.0, 0.0, 0.0}},
            {{-1.0, 0.0, 0.26526400446891785}, {-1.0, 0.0, 0.0}},
            {{-1.0, 0.0, 0.26526400446891785}, {-1.0, 0.0, 0.0}},
            {{-1.0, 0.49101847410202026, -0.3333333134651184}, {-1.0, 0.0, 0.0}},
            {{-1.0, 0.0, -0.2320207953453064}, {-1.0, 0.0, 0.0}},
            {{-0.3333333134651184, 0.49101847410202026, -1.0}, {0.0, 0.9999999403953552, 0.0}},
            {{-1.0, 0.49101847410202026, -0.3333333134651184}, {0.0, 0.9999999403953552, 0.0}},
            {{-0.3333333134651184, 0.49101847410202026, -0.3333333134651184}, {0.0, 0.9999999403953552, 0.0}},
            {{-0.3333333134651184, 0.49101847410202026, -0.3333333134651184}, {0.0, 1.0, 0.0}},
            {{-1.0, 0.49101847410202026, 0.3333333134651184}, {0.0, 1.0, 0.0}},
            {{-0.3333333134651184, 0.49101847410202026, 0.3333333134651184}, {0.0, 1.0, 0.0}},
            {{0.04226696491241455, 0.6956948041915894, -0.3333333134651184}, {1.0, 0.0, -0.0}},
            {{0.04226696491241455, 0.6222463846206665, -1.1914901733398438}, {1.0, 0.0, -0.0}},
            {{0.04226696491241455, 0.6956948041915894, -1.1914901733398438}, {1.0, 0.0, -0.0}},
            {{-0.15251730382442474, 0.5119960308074951, 0.3333333134651184}, {0.0, -0.0, 1.0}},
            {{0.15251730382442474, 0.8059451580047607, 0.3333333134651184}, {0.0, -0.0, 1.0}},
            {{-0.15251731872558594, 0.8059451580047607, 0.3333333134651184}, {0.0, -0.0, 1.0}},
            {{-0.3333333134651184, 0.5119960308074951, -0.15251730382442474}, {-0.0, -1.0, -0.0}},
            {{-0.15251731872558594, 0.5119960308074951, -0.3333333134651184}, {-0.0, -1.0, -0.0}},
            {{0.15251731872558594, 0.5119960308074951, 0.3333333134651184}, {-0.0, -1.0, -0.0}},
            {{-0.3333333134651184, 0.5119960308074951, -0.15251730382442474}, {-1.0, -0.0, 0.0}},
            {{-0.3333333134651184, 0.8059451580047607, 0.15251730382442474}, {-1.0, -0.0, 0.0}},
            {{-0.3333333134651184, 0.8059451580047607, -0.15251731872558594}, {-1.0, -0.0, 0.0}},
            {{0.15251733362674713, 0.9867611527442932, -0.15251731872558594}, {0.0, 1.0, 0.0}},
            {{-0.15251733362674713, 0.9867611527442932, 0.15251731872558594}, {0.0, 1.0, 0.0}},
            {{0.15251731872558594, 0.9867611527442932, 0.15251733362674713}, {0.0, 1.0, 0.0}},
            {{0.3333333134651184, 0.8059451580047607, -0.15251730382442474}, {0.5773502588272095, 0.5773501992225647, -0.5773502588272095}},
            {{0.15251731872558594, 0.8059451580047607, -0.3333333134651184}, {0.5773502588272095, 0.5773501992225647, -0.5773502588272095}},
            {{0.15251733362674713, 0.9867611527442932, -0.15251731872558594}, {0.5773502588272095, 0.5773501992225647, -0.5773502588272095}},
            {{0.3333333134651184, 0.8059451580047607, 0.15251731872558594}, {0.5773502588272095, 0.5773501992225647, 0.5773503184318542}},
            {{0.15251731872558594, 0.9867611527442932, 0.15251733362674713}, {0.5773502588272095, 0.5773501992225647, 0.5773503184318542}},
            {{0.15251730382442474, 0.8059451580047607, 0.3333333134651184}, {0.5773502588272095, 0.5773501992225647, 0.5773503184318542}},
            {{-0.3333333134651184, 0.8059451580047607, -0.15251731872558594}, {-0.5773502588272095, 0.5773501992225647, -0.5773503184318542}},
            {{-0.15251731872558594, 0.9867611527442932, -0.15251733362674713}, {-0.5773502588272095, 0.5773501992225647, -0.5773503184318542}},
            {{-0.15251730382442474, 0.8059451580047607, -0.3333333134651184}, {-0.5773502588272095, 0.5773501992225647, -0.5773503184318542}},
            {{-0.3333333134651184, 0.8059451580047607, 0.15251730382442474}, {-0.5773502588272095, 0.5773501992225647, 0.5773502588272095}},
            {{-0.15251731872558594, 0.8059451580047607, 0.3333333134651184}, {-0.5773502588272095, 0.5773501992225647, 0.5773502588272095}},
            {{-0.15251733362674713, 0.9867611527442932, 0.15251731872558594}, {-0.5773502588272095, 0.5773501992225647, 0.5773502588272095}},
            {{0.15251733362674713, 0.9867611527442932, -0.15251731872558594}, {0.7071068286895752, 0.7071067690849304, -0.0}},
            {{0.3333333134651184, 0.8059451580047607, 0.15251731872558594}, {0.7071068286895752, 0.7071067690849304, -0.0}},
            {{0.3333333134651184, 0.8059451580047607, -0.15251730382442474}, {0.7071068286895752, 0.7071067690849304, -0.0}},
            {{-0.3333333134651184, 0.8059451580047607, -0.15251731872558594}, {-0.7071068286895752, 0.7071067690849304, -3.454267272218203e-08}},
            {{-0.15251733362674713, 0.9867611527442932, 0.15251731872558594}, {-0.7071068286895752, 0.7071067690849304, -3.454267272218203e-08}},
            {{-0.15251731872558594, 0.9867611527442932, -0.15251733362674713}, {-0.7071068286895752, 0.7071067690849304, -3.454267272218203e-08}},
            {{-0.15251731872558594, 0.9867611527442932, -0.15251733362674713}, {-0.0, 0.7071067690849304, -0.7071068286895752}},
            {{0.15251731872558594, 0.8059451580047607, -0.3333333134651184}, {-0.0, 0.7071067690849304, -0.7071068286895752}},
            {{-0.15251730382442474, 0.8059451580047607, -0.3333333134651184}, {-0.0, 0.7071067690849304, -0.7071068286895752}},
            {{-0.15251731872558594, 0.8059451580047607, 0.3333333134651184}, {-3.454267272218203e-08, 0.7071067690849304, 0.7071068286895752}},
            {{0.15251731872558594, 0.9867611527442932, 0.15251733362674713}, {-3.454267272218203e-08, 0.7071067690849304, 0.7071068286895752}},
            {{-0.15251733362674713, 0.9867611527442932, 0.15251731872558594}, {-3.454267272218203e-08, 0.7071067690849304, 0.7071068286895752}},
            {{-0.3333333134651184, 0.5119960308074951, -0.15251730382442474}, {-0.7071068286895752, 3.584536045764253e-08, -0.7071067690849304}},
            {{-0.15251730382442474, 0.8059451580047607, -0.3333333134651184}, {-0.7071068286895752, 3.584536045764253e-08, -0.7071067690849304}},
            {{-0.15251731872558594, 0.5119960308074951, -0.3333333134651184}, {-0.7071068286895752, 3.584536045764253e-08, -0.7071067690849304}},
            {{0.3333333134651184, 0.8059451580047607, -0.15251730382442474}, {0.7071068286895752, -3.584536045764253e-08, -0.7071067690849304}},
            {{0.15251730382442474, 0.5119960308074951, -0.3333333134651184}, {0.7071068286895752, -3.584536045764253e-08, -0.7071067690849304}},
            {{0.15251731872558594, 0.8059451580047607, -0.3333333134651184}, {0.7071068286895752, -3.584536045764253e-08, -0.7071067690849304}},
            {{0.15251730382442474, 0.8059451580047607, 0.3333333134651184}, {0.7071067690849304, -3.584536045764253e-08, 0.7071068286895752}},
            {{0.3333333134651184, 0.5119960308074951, 0.15251730382442474}, {0.7071067690849304, -3.584536045764253e-08, 0.7071068286895752}},
            {{0.3333333134651184, 0.8059451580047607, 0.15251731872558594}, {0.7071067690849304, -3.584536045764253e-08, 0.7071068286895752}},
            {{-0.3333333134651184, 0.8059451580047607, 0.15251730382442474}, {-0.7071068286895752, -3.584536045764253e-08, 0.7071067690849304}},
            {{-0.15251730382442474, 0.5119960308074951, 0.3333333134651184}, {-0.7071068286895752, -3.584536045764253e-08, 0.7071067690849304}},
            {{-0.15251731872558594, 0.8059451580047607, 0.3333333134651184}, {-0.7071068286895752, -3.584536045764253e-08, 0.7071067690849304}},
            {{0.3333333134651184, 0.5119960308074951, 0.15251730382442474}, {1.0, 0.0, 0.0}},
            {{0.3333333134651184, 0.8059451580047607, -0.15251730382442474}, {1.0, 0.0, 0.0}},
            {{0.3333333134651184, 0.8059451580047607, 0.15251731872558594}, {1.0, 0.0, 0.0}},
            {{0.04226696491241455, 0.6956948041915894, -0.3333333134651184}, {0.0, 0.0, -1.0}},
            {{-0.15251730382442474, 0.8059451580047607, -0.3333333134651184}, {0.0, 0.0, -1.0}},
            {{0.15251731872558594, 0.8059451580047607, -0.3333333134651184}, {0.0, 0.0, -1.0}},
            {{-0.042266957461833954, 0.6956948041915894, -0.3333333134651184}, {-0.0, 0.0, -1.0}},
            {{-0.15251731872558594, 0.5119960308074951, -0.3333333134651184}, {-0.0, 0.0, -1.0}},
            {{-0.15251730382442474, 0.8059451580047607, -0.3333333134651184}, {-0.0, 0.0, -1.0}},
            {{0.04226696491241455, 0.6222463846206665, -0.3333333134651184}, {0.0, -0.0, -1.0}},
            {{0.15251731872558594, 0.8059451580047607, -0.3333333134651184}, {0.0, -0.0, -1.0}},
            {{0.15251730382442474, 0.5119960308074951, -0.3333333134651184}, {0.0, -0.0, -1.0}},
            {{-0.04226696491241455, 0.6222463846206665, -0.3333333134651184}, {0.0, -0.0, -1.0}},
            {{0.15251730382442474, 0.5119960308074951, -0.3333333134651184}, {0.0, -0.0, -1.0}},
            {{-0.15251731872558594, 0.5119960308074951, -0.3333333134651184}, {0.0, -0.0, -1.0}},
            {{0.04226696491241455, 0.6956948041915894, -1.1914901733398438}, {0.9441251158714294, 0.0, 0.32958731055259705}},
            {{0.07000605762004852, 0.5981449484825134, -1.2709506750106812}, {0.9441251158714294, 0.0, 0.32958731055259705}},
            {{0.07000605762004852, 0.7197962403297424, -1.2709506750106812}, {0.9441251158714294, 0.0, 0.32958731055259705}},
            {{-0.042266957461833954, 0.6956948041915894, -0.3333333134651184}, {-0.0, 1.0, -0.0}},
            {{0.04226696491241455, 0.6956948041915894, -1.1914901733398438}, {-0.0, 1.0, -0.0}},
            {{-0.042266957461833954, 0.6956948041915894, -1.1914901733398438}, {-0.0, 1.0, -0.0}},
            {{0.04226696491241455, 0.6222463846206665, -0.3333333134651184}, {-0.0, -0.9999999403953552, 0.0}},
            {{-0.04226696491241455, 0.6222463846206665, -1.1914901733398438}, {-0.0, -0.9999999403953552, 0.0}},
            {{0.04226696491241455, 0.6222463846206665, -1.1914901733398438}, {-0.0, -0.9999999403953552, 0.0}},
            {{-0.04226696491241455, 0.6222463846206665, -0.3333333134651184}, {-1.0, 1.0143963180553328e-07, -0.0}},
            {{-0.042266957461833954, 0.6956948041915894, -1.1914901733398438}, {-1.0, 1.0143963180553328e-07, -0.0}},
            {{-0.04226696491241455, 0.6222463846206665, -1.1914901733398438}, {-1.0, 1.0143963180553328e-07, -0.0}},
            {{0.07000605762004852, 0.5981449484825134, -1.2709506750106812}, {-0.0, -1.0, 0.0}},
            {{-0.07000605762004852, 0.5981449484825134, -1.4553751945495605}, {-0.0, -1.0, 0.0}},
            {{0.07000605762004852, 0.5981449484825134, -1.4553751945495605}, {-0.0, -1.0, 0.0}},
            {{-0.042266957461833954, 0.6956948041915894, -1.1914901733398438}, {0.0, 0.9569492340087891, 0.29025551676750183}},
            {{0.07000605762004852, 0.7197962403297424, -1.2709506750106812}, {0.0, 0.9569492340087891, 0.29025551676750183}},
            {{-0.07000605016946793, 0.7197962403297424, -1.2709506750106812}, {0.0, 0.9569492340087891, 0.29025551676750183}},
            {{0.04226696491241455, 0.6222463846206665, -1.1914901733398438}, {-0.0, -0.9569492340087891, 0.29025551676750183}},
            {{-0.07000605762004852, 0.5981449484825134, -1.2709506750106812}, {-0.0, -0.9569492340087891, 0.29025551676750183}},
            {{0.07000605762004852, 0.5981449484825134, -1.2709506750106812}, {-0.0, -0.9569492340087891, 0.29025551676750183}},
            {{-0.04226696491241455, 0.6222463846206665, -1.1914901733398438}, {-0.9441251158714294, 5.7823307031412696e-08, 0.32958731055259705}},
            {{-0.07000605016946793, 0.7197962403297424, -1.2709506750106812}, {-0.9441251158714294, 5.7823307031412696e-08, 0.32958731055259705}},
            {{-0.07000605762004852, 0.5981449484825134, -1.2709506750106812}, {-0.9441251158714294, 5.7823307031412696e-08, 0.32958731055259705}},
            {{0.07000605762004852, 0.5981449484825134, -1.4553751945495605}, {0.0, 0.0, -1.0}},
            {{-0.07000605016946793, 0.7197962403297424, -1.4553751945495605}, {0.0, 0.0, -1.0}},
            {{0.07000605762004852, 0.7197962403297424, -1.4553751945495605}, {0.0, 0.0, -1.0}},
            {{-0.07000605762004852, 0.5981449484825134, -1.2709506750106812}, {-1.0, 6.124539453367106e-08, -0.0}},
            {{-0.07000605016946793, 0.7197962403297424, -1.4553751945495605}, {-1.0, 6.124539453367106e-08, -0.0}},
            {{-0.07000605762004852, 0.5981449484825134, -1.4553751945495605}, {-1.0, 6.124539453367106e-08, -0.0}},
            {{0.07000605762004852, 0.7197962403297424, -1.2709506750106812}, {1.0, 0.0, -0.0}},
            {{0.07000605762004852, 0.5981449484825134, -1.4553751945495605}, {1.0, 0.0, -0.0}},
            {{0.07000605762004852, 0.7197962403297424, -1.4553751945495605}, {1.0, 0.0, -0.0}},
            {{-0.07000605016946793, 0.7197962403297424, -1.2709506750106812}, {-0.0, 1.0, -0.0}},
            {{0.07000605762004852, 0.7197962403297424, -1.4553751945495605}, {-0.0, 1.0, -0.0}},
            {{-0.07000605016946793, 0.7197962403297424, -1.4553751945495605}, {-0.0, 1.0, -0.0}},
            {{-0.3333333134651184, 0.49101847410202026, 0.3333333134651184}, {0.0, 0.9999999403953552, -0.0}},
            {{-1.0, 0.49101847410202026, 0.3333333134651184}, {0.0, 0.9999999403953552, -0.0}},
            {{-1.0, 0.49101847410202026, 1.0}, {0.0, 0.9999999403953552, -0.0}},
            {{-0.3333333134651184, 0.0, 0.7625488042831421}, {0.0, -0.4353553354740143, 0.9002587199211121}},
            {{-0.3333333134651184, 0.49101847410202026, 1.0}, {0.0, -0.4353553354740143, 0.9002587199211121}},
            {{-1.0, 0.49101847410202026, 1.0}, {0.0, -0.4353553354740143, 0.9002587199211121}},
            {{-1.0, 0.0, -0.2320207953453064}, {-1.0, 0.0, 0.0}},
            {{-1.0, 0.49101847410202026, -0.3333333134651184}, {-1.0, 0.0, 0.0}},
            {{-1.0, 0.49101847410202026, -1.0}, {-1.0, 0.0, 0.0}},
            {{0.3333333134651184, 0.0, 0.26526400446891785}, {-0.0, -1.0, -0.0}},
            {{1.0, 0.0, 0.26526397466659546}, {-0.0, -1.0, -0.0}},
            {{1.0, 0.0, 0.7625488042831421}, {-0.0, -1.0, -0.0}},
            {{1.0, 0.0, 0.26526397466659546}, {1.0, 0.0, 0.0}},
            {{1.0, 0.49101847410202026, 0.3333333134651184}, {1.0, 0.0, 0.0}},
            {{1.0, 0.49101847410202026, 1.0}, {1.0, 0.0, 0.0}},
            {{0.3333333134651184, 0.0, -0.729305624961853}, {0.0, -0.48278695344924927, -0.8757378458976746}},
            {{0.3333333134651184, 0.49101847410202026, -1.0}, {0.0, -0.48278695344924927, -0.8757378458976746}},
            {{1.0, 0.49101847410202026, -1.0}, {0.0, -0.48278695344924927, -0.8757378458976746}},
            {{-1.0, 0.0, -0.729305624961853}, {0.0, -0.48278695344924927, -0.8757378458976746}},
            {{-1.0, 0.49101847410202026, -1.0}, {0.0, -0.48278695344924927, -0.8757378458976746}},
            {{-0.3333333134651184, 0.49101847410202026, -1.0}, {0.0, -0.48278695344924927, -0.8757378458976746}},
            {{0.3333333134651184, 0.0, -0.2320207953453064}, {-1.0, 0.0, 0.0}},
            {{0.3333333134651184, 0.49101847410202026, -0.3333333134651184}, {-1.0, 0.0, 0.0}},
            {{0.3333333134651184, 0.49101847410202026, -1.0}, {-1.0, 0.0, 0.0}},
            {{-1.0, 0.0, 0.26526400446891785}, {0.0, -1.0, -0.0}},
            {{-0.3333333134651184, 0.0, 0.26526400446891785}, {0.0, -1.0, -0.0}},
            {{-0.3333333134651184, 0.0, 0.7625488042831421}, {0.0, -1.0, -0.0}},
            {{-0.3333333134651184, 0.0, -0.2320207953453064}, {1.0, 0.0, -0.0}},
            {{-0.3333333134651184, 0.0, -0.729305624961853}, {1.0, 0.0, -0.0}},
            {{-0.3333333134651184, 0.49101847410202026, -1.0}, {1.0, 0.0, -0.0}},
            {{1.0, 0.0, 0.7625488042831421}, {0.0, -0.4353553354740143, 0.9002587199211121}},
            {{1.0, 0.49101847410202026, 1.0}, {0.0, -0.4353553354740143, 0.9002587199211121}},
            {{0.3333333134651184, 0.49101847410202026, 1.0}, {0.0, -0.4353553354740143, 0.9002587199211121}},
            {{0.3333333134651184, 0.0, -0.2320207953453064}, {0.0, -0.2020747810602188, -0.9793701171875}},
            {{-0.3333333134651184, 0.0, -0.2320207953453064}, {0.0, -0.2020747810602188, -0.9793701171875}},
            {{-0.3333333134651184, 0.49101847410202026, -0.3333333134651184}, {0.0, -0.2020747810602188, -0.9793701171875}},
            {{1.0, 0.49101847410202026, 0.3333333134651184}, {0.0, 0.9999999403953552, -0.0}},
            {{0.3333333134651184, 0.49101847410202026, 0.3333333134651184}, {0.0, 0.9999999403953552, -0.0}},
            {{0.3333333134651184, 0.49101847410202026, 1.0}, {0.0, 0.9999999403953552, -0.0}},
            {{-0.3333333134651184, 0.0, 0.26526400446891785}, {1.0, 0.0, 0.0}},
            {{-0.3333333134651184, 0.49101847410202026, 0.3333333134651184}, {1.0, 0.0, 0.0}},
            {{-0.3333333134651184, 0.49101847410202026, 1.0}, {1.0, 0.0, 0.0}},
            {{-0.3333333134651184, 0.49101847410202026, 0.3333333134651184}, {-0.0, -0.13731563091278076, 0.990527331829071}},
            {{-0.3333333134651184, 0.0, 0.26526400446891785}, {-0.0, -0.13731563091278076, 0.990527331829071}},
            {{0.3333333134651184, 0.0, 0.26526400446891785}, {-0.0, -0.13731563091278076, 0.990527331829071}},
            {{0.3333333134651184, 0.49101847410202026, -0.3333333134651184}, {0.0, 1.0, -0.0}},
            {{-0.3333333134651184, 0.49101847410202026, -0.3333333134651184}, {0.0, 1.0, -0.0}},
            {{-0.3333333134651184, 0.49101847410202026, 0.3333333134651184}, {0.0, 1.0, -0.0}},
            {{1.0, 0.49101847410202026, -1.0}, {0.0, 0.9999999403953552, -0.0}},
            {{0.3333333134651184, 0.49101847410202026, -1.0}, {0.0, 0.9999999403953552, -0.0}},
            {{0.3333333134651184, 0.49101847410202026, -0.3333333134651184}, {0.0, 0.9999999403953552, -0.0}},
            {{1.0, 0.49101847410202026, -0.3333333134651184}, {0.0, 1.0, -0.0}},
            {{0.3333333134651184, 0.49101847410202026, -0.3333333134651184}, {0.0, 1.0, -0.0}},
            {{0.3333333134651184, 0.49101847410202026, 0.3333333134651184}, {0.0, 1.0, -0.0}},
            {{0.3333333134651184, 0.0, 0.26526400446891785}, {-1.0, 0.0, -0.0}},
            {{0.3333333134651184, 0.0, 0.7625488042831421}, {-1.0, 0.0, -0.0}},
            {{0.3333333134651184, 0.49101847410202026, 1.0}, {-1.0, 0.0, -0.0}},
            {{-0.3333333134651184, 0.0, -0.2320207953453064}, {0.0, -1.0, -0.0}},
            {{0.3333333134651184, 0.0, -0.2320207953453064}, {0.0, -1.0, -0.0}},
            {{0.3333333134651184, 0.0, 0.26526400446891785}, {0.0, -1.0, -0.0}},
            {{-1.0, 0.0, -0.729305624961853}, {0.0, -1.0, -0.0}},
            {{-0.3333333134651184, 0.0, -0.729305624961853}, {0.0, -1.0, -0.0}},
            {{-0.3333333134651184, 0.0, -0.2320207953453064}, {0.0, -1.0, -0.0}},
            {{-1.0, 0.0, -0.2320207953453064}, {0.0, -1.0, -0.0}},
            {{-0.3333333134651184, 0.0, -0.2320207953453064}, {0.0, -1.0, -0.0}},
            {{-0.3333333134651184, 0.0, 0.26526400446891785}, {0.0, -1.0, -0.0}},
            {{1.0, 0.0, -0.729305624961853}, {1.0, 0.0, 0.0}},
            {{1.0, 0.49101847410202026, -1.0}, {1.0, 0.0, 0.0}},
            {{1.0, 0.49101847410202026, -0.3333333134651184}, {1.0, 0.0, 0.0}},
            {{1.0, 0.0, -0.23202082514762878}, {1.0, 0.0, 0.0}},
            {{1.0, 0.49101847410202026, -0.3333333134651184}, {1.0, 0.0, 0.0}},
            {{1.0, 0.49101847410202026, 0.3333333134651184}, {1.0, 0.0, 0.0}},
            {{0.3333333134651184, 0.0, -0.729305624961853}, {0.0, -1.0, -0.0}},
            {{1.0, 0.0, -0.729305624961853}, {0.0, -1.0, -0.0}},
            {{1.0, 0.0, -0.23202082514762878}, {0.0, -1.0, -0.0}},
            {{0.3333333134651184, 0.0, -0.2320207953453064}, {-0.0, -1.0, -0.0}},
            {{1.0, 0.0, -0.23202082514762878}, {-0.0, -1.0, -0.0}},
            {{1.0, 0.0, 0.26526397466659546}, {-0.0, -1.0, -0.0}},
            {{-1.0, 0.0, 0.7625488042831421}, {-1.0, -0.0, 0.0}},
            {{-1.0, 0.49101847410202026, 1.0}, {-1.0, -0.0, 0.0}},
            {{-1.0, 0.49101847410202026, 0.3333333134651184}, {-1.0, -0.0, 0.0}},
            {{-1.0, 0.0, 0.26526400446891785}, {-1.0, -0.0, 0.0}},
            {{-1.0, 0.49101847410202026, 0.3333333134651184}, {-1.0, -0.0, 0.0}},
            {{-1.0, 0.49101847410202026, -0.3333333134651184}, {-1.0, -0.0, 0.0}},
            {{-0.3333333134651184, 0.49101847410202026, -1.0}, {0.0, 0.9999999403953552, -0.0}},
            {{-1.0, 0.49101847410202026, -1.0}, {0.0, 0.9999999403953552, -0.0}},
            {{-1.0, 0.49101847410202026, -0.3333333134651184}, {0.0, 0.9999999403953552, -0.0}},
            {{-0.3333333134651184, 0.49101847410202026, -0.3333333134651184}, {0.0, 1.0, -0.0}},
            {{-1.0, 0.49101847410202026, -0.3333333134651184}, {0.0, 1.0, -0.0}},
            {{-1.0, 0.49101847410202026, 0.3333333134651184}, {0.0, 1.0, -0.0}},
            {{0.04226696491241455, 0.6956948041915894, -0.3333333134651184}, {1.0, -0.0, -0.0}},
            {{0.04226696491241455, 0.6222463846206665, -0.3333333134651184}, {1.0, -0.0, -0.0}},
            {{0.04226696491241455, 0.6222463846206665, -1.1914901733398438}, {1.0, -0.0, -0.0}},
            {{-0.15251730382442474, 0.5119960308074951, 0.3333333134651184}, {-0.0, -0.0, 1.0}},
            {{0.15251731872558594, 0.5119960308074951, 0.3333333134651184}, {-0.0, -0.0, 1.0}},
            {{0.15251730382442474, 0.8059451580047607, 0.3333333134651184}, {-0.0, -0.0, 1.0}},
            {{-0.15251731872558594, 0.5119960308074951, -0.3333333134651184}, {0.0, -1.0, -0.0}},
            {{0.15251730382442474, 0.5119960308074951, -0.3333333134651184}, {0.0, -1.0, -0.0}},
            {{0.3333333134651184, 0.5119960308074951, -0.15251731872558594}, {0.0, -1.0, -0.0}},
            {{0.3333333134651184, 0.5119960308074951, -0.15251731872558594}, {0.0, -1.0, -0.0}},
            {{0.3333333134651184, 0.5119960308074951, 0.15251730382442474}, {0.0, -1.0, -0.0}},
            {{-0.15251731872558594, 0.5119960308074951, -0.3333333134651184}, {0.0, -1.0, -0.0}},
            {{0.3333333134651184, 0.5119960308074951, 0.15251730382442474}, {0.0, -1.0, -0.0}},
            {{0.15251731872558594, 0.5119960308074951, 0.3333333134651184}, {0.0, -1.0, -0.0}},
            {{-0.15251731872558594, 0.5119960308074951, -0.3333333134651184}, {0.0, -1.0, -0.0}},
            {{0.15251731872558594, 0.5119960308074951, 0.3333333134651184}, {0.0, -1.0, -0.0}},
            {{-0.15251730382442474, 0.5119960308074951, 0.3333333134651184}, {0.0, -1.0, -0.0}},
            {{-0.3333333134651184, 0.5119960308074951, 0.15251731872558594}, {0.0, -1.0, -0.0}},
            {{-0.3333333134651184, 0.5119960308074951, 0.15251731872558594}, {-0.0, -1.0, 0.0}},
            {{-0.3333333134651184, 0.5119960308074951, -0.15251730382442474}, {-0.0, -1.0, 0.0}},
            {{0.15251731872558594, 0.5119960308074951, 0.3333333134651184}, {-0.0, -1.0, 0.0}},
            {{-0.3333333134651184, 0.5119960308074951, -0.15251730382442474}, {-1.0, -0.0, -0.0}},
            {{-0.3333333134651184, 0.5119960308074951, 0.15251731872558594}, {-1.0, -0.0, -0.0}},
            {{-0.3333333134651184, 0.8059451580047607, 0.15251730382442474}, {-1.0, -0.0, -0.0}},
            {{0.15251733362674713, 0.9867611527442932, -0.15251731872558594}, {-0.0, 1.0, -0.0}},
            {{-0.15251731872558594, 0.9867611527442932, -0.15251733362674713}, {-0.0, 1.0, -0.0}},
            {{-0.15251733362674713, 0.9867611527442932, 0.15251731872558594}, {-0.0, 1.0, -0.0}},
            {{0.15251733362674713, 0.9867611527442932, -0.15251731872558594}, {0.7071068286895752, 0.7071068286895752, 3.454267272218203e-08}},
            {{0.15251731872558594, 0.9867611527442932, 0.15251733362674713}, {0.7071068286895752, 0.7071068286895752, 3.454267272218203e-08}},
            {{0.3333333134651184, 0.8059451580047607, 0.15251731872558594}, {0.7071068286895752, 0.7071068286895752, 3.454267272218203e-08}},
            {{-0.3333333134651184, 0.8059451580047607, -0.15251731872558594}, {-0.7071068286895752, 0.7071067690849304, -0.0}},
            {{-0.3333333134651184, 0.8059451580047607, 0.15251730382442474}, {-0.7071068286895752, 0.7071067690849304, -0.0}},
            {{-0.15251733362674713, 0.9867611527442932, 0.15251731872558594}, {-0.7071068286895752, 0.7071067690849304, -0.0}},
            {{-0.15251731872558594, 0.9867611527442932, -0.15251733362674713}, {3.454267272218203e-08, 0.7071068286895752, -0.7071068286895752}},
            {{0.15251733362674713, 0.9867611527442932, -0.15251731872558594}, {3.454267272218203e-08, 0.7071068286895752, -0.7071068286895752}},
            {{0.15251731872558594, 0.8059451580047607, -0.3333333134651184}, {3.454267272218203e-08, 0.7071068286895752, -0.7071068286895752}},
            {{-0.15251731872558594, 0.8059451580047607, 0.3333333134651184}, {0.0, 0.7071067690849304, 0.7071068286895752}},
            {{0.15251730382442474, 0.8059451580047607, 0.3333333134651184}, {0.0, 0.7071067690849304, 0.7071068286895752}},
            {{0.15251731872558594, 0.9867611527442932, 0.15251733362674713}, {0.0, 0.7071067690849304, 0.7071068286895752}},
            {{-0.3333333134651184, 0.5119960308074951, -0.15251730382442474}, {-0.7071067690849304, -3.584536045764253e-08, -0.7071068286895752}},
            {{-0.3333333134651184, 0.8059451580047607, -0.15251731872558594}, {-0.7071067690849304, -3.584536045764253e-08, -0.7071068286895752}},
            {{-0.15251730382442474, 0.8059451580047607, -0.3333333134651184}, {-0.7071067690849304, -3.584536045764253e-08, -0.7071068286895752}},
            {{0.3333333134651184, 0.8059451580047607, -0.15251730382442474}, {0.7071067690849304, 3.584536045764253e-08, -0.7071068286895752}},
            {{0.3333333134651184, 0.5119960308074951, -0.15251731872558594}, {0.7071067690849304, 3.584536045764253e-08, -0.7071068286895752}},
            {{0.15251730382442474, 0.5119960308074951, -0.3333333134651184}, {0.7071067690849304, 3.584536045764253e-08, -0.7071068286895752}},
            {{0.15251730382442474, 0.8059451580047607, 0.3333333134651184}, {0.7071068286895752, 3.584536045764253e-08, 0.7071067690849304}},
            {{0.15251731872558594, 0.5119960308074951, 0.3333333134651184}, {0.7071068286895752, 3.584536045764253e-08, 0.7071067690849304}},
            {{0.3333333134651184, 0.5119960308074951, 0.15251730382442474}, {0.7071068286895752, 3.584536045764253e-08, 0.7071067690849304}},
            {{-0.3333333134651184, 0.8059451580047607, 0.15251730382442474}, {-0.7071067690849304, 3.584536045764253e-08, 0.7071068286895752}},
            {{-0.3333333134651184, 0.5119960308074951, 0.15251731872558594}, {-0.7071067690849304, 3.584536045764253e-08, 0.7071068286895752}},
            {{-0.15251730382442474, 0.5119960308074951, 0.3333333134651184}, {-0.7071067690849304, 3.584536045764253e-08, 0.7071068286895752}},
            {{0.3333333134651184, 0.5119960308074951, 0.15251730382442474}, {1.0, 0.0, -0.0}},
            {{0.3333333134651184, 0.5119960308074951, -0.15251731872558594}, {1.0, 0.0, -0.0}},
            {{0.3333333134651184, 0.8059451580047607, -0.15251730382442474}, {1.0, 0.0, -0.0}},
            {{0.04226696491241455, 0.6956948041915894, -0.3333333134651184}, {-0.0, 0.0, -1.0}},
            {{-0.042266957461833954, 0.6956948041915894, -0.3333333134651184}, {-0.0, 0.0, -1.0}},
            {{-0.15251730382442474, 0.8059451580047607, -0.3333333134651184}, {-0.0, 0.0, -1.0}},
            {{-0.042266957461833954, 0.6956948041915894, -0.3333333134651184}, {0.0, 0.0, -1.0}},
            {{-0.04226696491241455, 0.6222463846206665, -0.3333333134651184}, {0.0, 0.0, -1.0}},
            {{-0.15251731872558594, 0.5119960308074951, -0.3333333134651184}, {0.0, 0.0, -1.0}},
            {{0.04226696491241455, 0.6222463846206665, -0.3333333134651184}, {0.0, 0.0, -1.0}},
            {{0.04226696491241455, 0.6956948041915894, -0.3333333134651184}, {0.0, 0.0, -1.0}},
            {{0.15251731872558594, 0.8059451580047607, -0.3333333134651184}, {0.0, 0.0, -1.0}},
            {{-0.04226696491241455, 0.6222463846206665, -0.3333333134651184}, {0.0, 0.0, -0.9999999403953552}},
            {{0.04226696491241455, 0.6222463846206665, -0.3333333134651184}, {0.0, 0.0, -0.9999999403953552}},
            {{0.15251730382442474, 0.5119960308074951, -0.3333333134651184}, {0.0, 0.0, -0.9999999403953552}},
            {{0.04226696491241455, 0.6956948041915894, -1.1914901733398438}, {0.9441251158714294, 0.0, 0.32958731055259705}},
            {{0.04226696491241455, 0.6222463846206665, -1.1914901733398438}, {0.9441251158714294, 0.0, 0.32958731055259705}},
            {{0.07000605762004852, 0.5981449484825134, -1.2709506750106812}, {0.9441251158714294, 0.0, 0.32958731055259705}},
            {{-0.042266957461833954, 0.6956948041915894, -0.3333333134651184}, {0.0, 1.0, -0.0}},
            {{0.04226696491241455, 0.6956948041915894, -0.3333333134651184}, {0.0, 1.0, -0.0}},
            {{0.04226696491241455, 0.6956948041915894, -1.1914901733398438}, {0.0, 1.0, -0.0}},
            {{0.04226696491241455, 0.6222463846206665, -0.3333333134651184}, {0.0, -0.9999999403953552, -0.0}},
            {{-0.04226696491241455, 0.6222463846206665, -0.3333333134651184}, {0.0, -0.9999999403953552, -0.0}},
            {{-0.04226696491241455, 0.6222463846206665, -1.1914901733398438}, {0.0, -0.9999999403953552, -0.0}},
            {{-0.04226696491241455, 0.6222463846206665, -0.3333333134651184}, {-1.0, 1.0143963180553328e-07, -0.0}},
            {{-0.042266957461833954, 0.6956948041915894, -0.3333333134651184}, {-1.0, 1.0143963180553328e-07, -0.0}},
            {{-0.042266957461833954, 0.6956948041915894, -1.1914901733398438}, {-1.0, 1.0143963180553328e-07, -0.0}},
            {{0.07000605762004852, 0.5981449484825134, -1.2709506750106812}, {0.0, -1.0, -0.0}},
            {{-0.07000605762004852, 0.5981449484825134, -1.2709506750106812}, {0.0, -1.0, -0.0}},
            {{-0.07000605762004852, 0.5981449484825134, -1.4553751945495605}, {0.0, -1.0, -0.0}},
            {{-0.042266957461833954, 0.6956948041915894, -1.1914901733398438}, {0.0, 0.9569491147994995, 0.29025551676750183}},
            {{0.04226696491241455, 0.6956948041915894, -1.1914901733398438}, {0.0, 0.9569491147994995, 0.29025551676750183}},
            {{0.07000605762004852, 0.7197962403297424, -1.2709506750106812}, {0.0, 0.9569491147994995, 0.29025551676750183}},
            {{0.04226696491241455, 0.6222463846206665, -1.1914901733398438}, {0.0, -0.9569491744041443, 0.29025551676750183}},
            {{-0.04226696491241455, 0.6222463846206665, -1.1914901733398438}, {0.0, -0.9569491744041443, 0.29025551676750183}},
            {{-0.07000605762004852, 0.5981449484825134, -1.2709506750106812}, {0.0, -0.9569491744041443, 0.29025551676750183}},
            {{-0.04226696491241455, 0.6222463846206665, -1.1914901733398438}, {-0.9441250562667847, 9.577168924579382e-08, 0.32958731055259705}},
            {{-0.042266957461833954, 0.6956948041915894, -1.1914901733398438}, {-0.9441250562667847, 9.577168924579382e-08, 0.32958731055259705}},
            {{-0.07000605016946793, 0.7197962403297424, -1.2709506750106812}, {-0.9441250562667847, 9.577168924579382e-08, 0.32958731055259705}},
            {{0.07000605762004852, 0.5981449484825134, -1.4553751945495605}, {-0.0, 0.0, -1.0}},
            {{-0.07000605762004852, 0.5981449484825134, -1.4553751945495605}, {-0.0, 0.0, -1.0}},
            {{-0.07000605016946793, 0.7197962403297424, -1.4553751945495605}, {-0.0, 0.0, -1.0}},
            {{-0.07000605762004852, 0.5981449484825134, -1.2709506750106812}, {-1.0, 6.124539453367106e-08, -0.0}},
            {{-0.07000605016946793, 0.7197962403297424, -1.2709506750106812}, {-1.0, 6.124539453367106e-08, -0.0}},
            {{-0.07000605016946793, 0.7197962403297424, -1.4553751945495605}, {-1.0, 6.124539453367106e-08, -0.0}},
            {{0.07000605762004852, 0.7197962403297424, -1.2709506750106812}, {1.0, -0.0, -0.0}},
            {{0.07000605762004852, 0.5981449484825134, -1.2709506750106812}, {1.0, -0.0, -0.0}},
            {{0.07000605762004852, 0.5981449484825134, -1.4553751945495605}, {1.0, -0.0, -0.0}},
            {{-0.07000605016946793, 0.7197962403297424, -1.2709506750106812}, {0.0, 1.0, -0.0}},
            {{0.07000605762004852, 0.7197962403297424, -1.2709506750106812}, {0.0, 1.0, -0.0}},
            {{0.07000605762004852, 0.7197962403297424, -1.4553751945495605}, {0.0, 1.0, -0.0}},
        });

        auto cubeMesh = std::make_shared<applesauce::VertexArray>();
        auto planeMesh = std::make_shared<applesauce::VertexArray>();
        auto tenkMesh = std::make_shared<applesauce::VertexArray>();

        applesauce::VertexBufferDescription desc{
            {applesauce::VertexAttribute::position, 3, offsetof(Vertex, position), sizeof(Vertex)},
            {applesauce::VertexAttribute::normal, 3, offsetof(Vertex, normal), sizeof(Vertex)},
        };

        // TODO: The "Vertex Array" construct probably needs to be composed of
        // vertex arrays somehow.
        cubeMesh->addVertexBuffer(*cubeBuffer, desc);
        planeMesh->addVertexBuffer(*planeBuffer, desc);
        tenkMesh->addVertexBuffer(*tenkBuffer, desc);

        meshes.push_back(planeMesh);
        meshes.push_back(cubeMesh);
        meshes.push_back(tenkMesh);

        glfwSwapInterval(1);

        const auto [width, height] = window.framebufferSize();
        glViewport(0, 0, width, height);
        glEnable(GL_DEPTH_TEST);

        const char *playField = "********************************\n"
                                "*                              *\n"
                                "*                              *\n"
                                "*              **              *\n"
                                "*              **              *\n"
                                "*              **              *\n"
                                "*    **                  **    *\n"
                                "*     *                  *     *\n"
                                "*  T  *   ***      ***   *  T  *\n"
                                "*     *   ***      ***   *     *\n"
                                "*     *                  *     *\n"
                                "*    **                  **    *\n"
                                "*              **              *\n"
                                "*              **              *\n"
                                "*              **              *\n"
                                "*                              *\n"
                                "*                              *\n"
                                "********************************";

        std::stringstream stream(playField);
        std::string line;

        int row = 0;
        int maxCol = -1;
        while (std::getline(stream, line, '\n'))
        {
            int col = 0;
            for (const auto &character : line)
            {
                size_t idx = character == '*' ? 1 : 0;
                glm::vec3 color = character == '*' ? WALL_COLOR : FLOOR_COLOR;
                entities.push_back({{col, 0, row}, 0, idx, color});

                // If there's a T also put a tank, cause why not
                if (character == 'T')
                {
                    entities.push_back({{col, 0, row}, 0, 2, TANK_COLORS[rand() % 5]});
                }

                col++;
            }
            maxCol = std::max(maxCol, col);
            row++;
        }

        Entity *lastTank = nullptr;
        for (auto &entity : entities)
        {
            entity.position.x -= maxCol / 2;
            entity.position.z -= row / 2;

            if (entity.meshIndex == 2)
            {
                lastTank = &entity;
            }
        }

        if (lastTank)
        {
            std::cout << "Initialized player" << std::endl;
            player = std::make_shared<Tank>(lastTank);
        }
    }

    void display() override
    {
        window.clear({0.1f, 0.1f, 0.1f, 1.0f});

        const auto [width, height] = window.framebufferSize();
        camera.viewport = {width, height};

        if (player)
        {
            player->update();
        }

        camera.position = glm::mat3(glm::yawPitchRoll(theta, pitch, 0.0f)) * glm::vec3{0, 0, -dist};
        glm::mat4 view = camera.lookAtMatrix(glm::vec3(0));
        glm::mat4 projection = camera.projectionMatrix();

        for (const auto &entity : entities)
        {
            auto model = glm::mat4(1.0);
            model = glm::translate(model, entity.position);
            model = glm::rotate(model, entity.angle, glm::vec3(0, 1, 0));

            glm::mat4 modelView = view * model;
            glm::mat3 normalMatrix = glm::mat3(modelView);

            glm::mat4 MVPMatrix = projection * modelView;
            glm::vec3 LightDirection = normalMatrix * glm::rotateX(glm::vec3{0.0, 1.0, 0.0}, 1.0f);

            shader->set("MVPMatrix", MVPMatrix);
            shader->set("NormalMatrix", normalMatrix);
            shader->set("Color", entity.color);
            shader->set("Ambient", glm::vec3{0.2, 0.2, 0.3});
            shader->set("LightColor", glm::vec3{1.0, 1.0, 1.0});
            shader->set("LightDirection", LightDirection);

            meshes[entity.meshIndex]->bind();
            glDrawArrays(GL_TRIANGLES, 0, meshes[entity.meshIndex]->safeElementCount());
        }
    }

    void cleanUp() override
    {
        std::cout << "Camera Stats:\n";
        std::cout << "\tPitch: " << pitch << std::endl;
        std::cout << "\tTheta: " << theta << std::endl;
        std::cout << "\tDist: " << dist << std::endl;
    }

private:
    std::shared_ptr<Shader> shader;
    std::shared_ptr<applesauce::VertexBuffer<Vertex>> cubeBuffer;
    std::shared_ptr<applesauce::VertexBuffer<Vertex>> planeBuffer;
    std::shared_ptr<applesauce::VertexBuffer<Vertex>> tenkBuffer;
    std::vector<std::shared_ptr<applesauce::VertexArray>> meshes;
    std::vector<Entity> entities;

    std::shared_ptr<Tank> player;

    float pitch = 0.955591;
    float theta = 2.90973;
    float dist = 25.1983;

    double last_xpos = 0;
    double last_ypos = 0;
    bool move_camera = false;
    Camera camera;
};

int main()
{
    Triangles app;
    app.run();
    return 0;
}